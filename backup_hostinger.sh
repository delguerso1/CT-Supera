#!/bin/bash

# Script de backup para Hostinger
echo "üíæ Iniciando backup do CT Supera..."

# Configura√ß√µes
BACKUP_DIR="/root/backups"
DATE=$(date +%Y%m%d_%H%M%S)
PROJECT_DIR="/root/ct-supera"

# Criar diret√≥rio de backup se n√£o existir
mkdir -p $BACKUP_DIR

# Backup do banco de dados PostgreSQL
echo "üóÑÔ∏è Fazendo backup do banco de dados..."
pg_dump -U ctsupera -h localhost ctsupera > $BACKUP_DIR/database_backup_$DATE.sql

# Backup dos arquivos de m√≠dia
echo "üìÅ Fazendo backup dos arquivos de m√≠dia..."
tar -czf $BACKUP_DIR/media_backup_$DATE.tar.gz -C $PROJECT_DIR media/

# Backup dos logs
echo "üìã Fazendo backup dos logs..."
tar -czf $BACKUP_DIR/logs_backup_$DATE.tar.gz -C $PROJECT_DIR logs/

# Backup do arquivo .env
echo "üîê Fazendo backup do arquivo .env..."
cp $PROJECT_DIR/.env $BACKUP_DIR/env_backup_$DATE

# Criar backup completo
echo "üì¶ Criando backup completo..."
tar -czf $BACKUP_DIR/complete_backup_$DATE.tar.gz \
    -C $BACKUP_DIR \
    database_backup_$DATE.sql \
    media_backup_$DATE.tar.gz \
    logs_backup_$DATE.tar.gz \
    env_backup_$DATE

# Remover arquivos tempor√°rios
rm $BACKUP_DIR/database_backup_$DATE.sql
rm $BACKUP_DIR/media_backup_$DATE.tar.gz
rm $BACKUP_DIR/logs_backup_$DATE.tar.gz
rm $BACKUP_DIR/env_backup_$DATE

# Limpar backups antigos (manter apenas os √∫ltimos 7 dias)
echo "üßπ Limpando backups antigos..."
find $BACKUP_DIR -name "complete_backup_*.tar.gz" -mtime +7 -delete

echo "‚úÖ Backup conclu√≠do: $BACKUP_DIR/complete_backup_$DATE.tar.gz"

# Mostrar informa√ß√µes do backup
ls -lh $BACKUP_DIR/complete_backup_$DATE.tar.gz
